{"ast":null,"code":"var _jsxFileName = \"/home/cccc2184/Documents/Finance_node/client/src/Stockmarket/Stockmarket.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterParams = query => {\n  const symbolTerm = query.get('p');\n  const ticker = query.get('ticker');\n  const timeframe = query.get('timeframe');\n  const queryParams = {\n    symbolTerm,\n    ticker,\n    timeframe\n  };\n  return queryParams;\n};\nconst Stockmarket = ({}) => {\n  _s();\n  var _backendData$data;\n  const queryParams = new URLSearchParams(window.location.search);\n  const params = filterParams(queryParams);\n  const [backendData, setBackendData] = useState({});\n  const currentDate = new Date();\n  const oneYearAgo = new Date(currentDate);\n  oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n  console.log('Today:', currentDate.toISOString().slice(0, 10));\n  console.log('One year ago:', oneYearAgo.toISOString().slice(0, 10));\n  const apiUrl = `http://127.0.0.1:5000/api/history?ticker=${params.ticker}&timeframe=${params.timeframe}`;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          mode: 'cors'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n          // Parse JSON if it's present\n          const data = await response.json();\n          setBackendData(data);\n        } else {\n          throw new Error('Response is not in JSON format');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [apiUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (_backendData$data = backendData.data) === null || _backendData$data === void 0 ? void 0 : _backendData$data.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Stock : \", row.close]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Stockmarket, \"YHGFUArwR+pSUAYMHKGahU0CpAI=\");\n_c = Stockmarket;\nexport default Stockmarket;\nvar _c;\n$RefreshReg$(_c, \"Stockmarket\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","filterParams","query","symbolTerm","get","ticker","timeframe","queryParams","Stockmarket","_s","_backendData$data","URLSearchParams","window","location","search","params","backendData","setBackendData","currentDate","Date","oneYearAgo","setFullYear","getFullYear","console","log","toISOString","slice","apiUrl","fetchData","response","fetch","method","mode","ok","Error","contentType","headers","includes","data","json","error","children","map","row","index","close","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cccc2184/Documents/Finance_node/client/src/Stockmarket/Stockmarket.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nconst filterParams = (query) => {\r\n    const symbolTerm = query.get('p');\r\n    const ticker = query.get('ticker');\r\n    const timeframe = query.get('timeframe')  \r\n    \r\n    const queryParams = {\r\n        symbolTerm,\r\n        ticker,\r\n        timeframe\r\n    };\r\n\r\n    return queryParams;\r\n}\r\n\r\nconst Stockmarket = ({ }) => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const params = filterParams(queryParams);\r\n\r\n\tconst [backendData, setBackendData] = useState ({});\r\n\tconst currentDate = new Date();\r\n\tconst oneYearAgo = new Date(currentDate);\r\n\toneYearAgo.setFullYear(currentDate.getFullYear() - 1);\r\n\r\n\tconsole.log('Today:', currentDate.toISOString().slice(0, 10));\r\n\tconsole.log('One year ago:', oneYearAgo.toISOString().slice(0, 10));\r\n  const apiUrl = `http://127.0.0.1:5000/api/history?ticker=${params.ticker}&timeframe=${params.timeframe}`;\r\n \t\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n          const response = await fetch(apiUrl, {\r\n\t\t\t      method : 'GET',\r\n\t\t\t      mode: 'cors',\r\n\t\t      });\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n\t\t      const contentType = response.headers.get('Content-Type');   \r\n\t          if (contentType && contentType.includes('application/json')) {\r\n\t\t        // Parse JSON if it's present\r\n\t\t\t        const data = await response.json();\r\n\t\t\t        setBackendData(data);\t\r\n\t\t        } else {\r\n\t\t\t        throw new Error('Response is not in JSON format');\r\n\t\t      }\r\n        } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    \r\n\tfetchData();\r\n  }, [apiUrl]);\r\n\r\n\treturn(\r\n\t\t  <div>\r\n\t\t\t{backendData.data?.map((row, index) => (\r\n\t\t\t\t<div key={index}>\r\n\t\t\t\t  <h5>Stock : {row.close}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t </div>\r\n        )\r\n    }\r\nexport default Stockmarket;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}