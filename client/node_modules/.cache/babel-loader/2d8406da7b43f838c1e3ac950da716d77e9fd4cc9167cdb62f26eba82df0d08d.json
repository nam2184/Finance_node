{"ast":null,"code":"export const fetchApi=async apiUrl=>{try{const response=await fetch(apiUrl,{method:'GET',mode:'cors'});if(!response.ok){throw new Error('Network response was not ok');}const contentType=response.headers.get('Content-Type');if(contentType&&contentType.includes('application/json')){// Parse JSON if it's present\nconst data=await response.json();if(data&&data.data&&Array.isArray(data.data)){if(data.data.length===0){return null;}else{return data;}}else{console.log(\"Invalid JSON format. 'data' should be an array.\");}}else{throw new Error('Response is not in JSON format');}}catch(error){console.error('Error fetching data:',error);}};export const filterParams=query=>{const timeframe=query.get('timeframe');const queryParams={timeframe};return queryParams;};","map":{"version":3,"names":["fetchApi","apiUrl","response","fetch","method","mode","ok","Error","contentType","headers","get","includes","data","json","Array","isArray","length","console","log","error","filterParams","query","timeframe","queryParams"],"sources":["/home/cccc2184/Documents/Finance_node/client/src/utils.js"],"sourcesContent":["export const fetchApi  =  async (apiUrl) => {\n    try {\n      const response = await fetch(apiUrl, {\n\t\t\t  method : 'GET',\n\t\t\t  mode: 'cors',\n\t\t  });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const contentType = response.headers.get('Content-Type');   \n      if (contentType && contentType.includes('application/json')) {\n\t\t    // Parse JSON if it's present\n        const data = await response.json();\n        if (data && data.data && Array.isArray(data.data)) {\n          if (data.data.length === 0) {\n            return null\n          } else {\n            return data;\n        }\n    } else {\n        console.log(\"Invalid JSON format. 'data' should be an array.\");\n    }\n      } else {\n\t\t\t        throw new Error('Response is not in JSON format');\n\t\t  }\n\t\t} catch (error) {\n        console.error('Error fetching data:', error);\n    }\n}\n\nexport const filterParams = (query) => {\n    const timeframe = query.get('timeframe')  \n    \n    const queryParams = {\n        timeframe\n    };\n\n    return queryParams;\n}\n\n\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,QAAQ,CAAK,KAAO,CAAAC,MAAM,EAAK,CACxC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACF,MAAM,CAAE,CACtCG,MAAM,CAAG,KAAK,CACdC,IAAI,CAAE,MACP,CAAC,CAAC,CACA,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,KAAM,CAAAC,WAAW,CAAGN,QAAQ,CAACO,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CACxD,GAAIF,WAAW,EAAIA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,CAAE,CAC7D;AACE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,EAAIA,IAAI,CAACA,IAAI,EAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAACA,IAAI,CAAC,CAAE,CACjD,GAAIA,IAAI,CAACA,IAAI,CAACI,MAAM,GAAK,CAAC,CAAE,CAC1B,MAAO,KAAI,CACb,CAAC,IAAM,CACL,MAAO,CAAAJ,IAAI,CACf,CACJ,CAAC,IAAM,CACHK,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC,CAClE,CACE,CAAC,IAAM,CACF,KAAM,IAAI,CAAAX,KAAK,CAAC,gCAAgC,CAAC,CACxD,CACF,CAAE,MAAOY,KAAK,CAAE,CACVF,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAIC,KAAK,EAAK,CACnC,KAAM,CAAAC,SAAS,CAAGD,KAAK,CAACX,GAAG,CAAC,WAAW,CAAC,CAExC,KAAM,CAAAa,WAAW,CAAG,CAChBD,SACJ,CAAC,CAED,MAAO,CAAAC,WAAW,CACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}