{"ast":null,"code":"var _jsxFileName = \"/home/cccc2184/Documents/Finance_node/client/src/Stockmarket/Stockmarket.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterParams = query => {\n  const timeframe = query.get('timeframe');\n  const queryParams = {\n    timeframe\n  };\n  return queryParams;\n};\nconst Stockmarket = () => {\n  _s();\n  var _backendData$data2;\n  const [timeframe, setTimeFrame] = useState({});\n  const [backendData, setBackendData] = useState({});\n  const {\n    symbol\n  } = useParams();\n  const currentDate = new Date();\n  const oneYearAgo = new Date(currentDate);\n  oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n  console.log('Today:', currentDate.toISOString().slice(0, 10));\n  console.log('One year ago:', oneYearAgo.toISOString().slice(0, 10));\n  useEffect(() => {\n    const fetchData = async () => {\n      const queryparams = new URLSearchParams(window.location.search);\n      const params = filterParams(queryparams);\n      const apiUrl = `http://127.0.0.1:5000/api/history?ticker=${symbol}&timeframe=${params.timeframe}`;\n      console.log(apiUrl);\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          mode: 'cors'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const contentType = response.headers.get('Content-Type');\n        if (contentType && contentType.includes('application/json')) {\n          var _backendData$data;\n          // Parse JSON if it's present\n          const data = await response.json();\n          setBackendData(data);\n          if (((_backendData$data = backendData.data) === null || _backendData$data === void 0 ? void 0 : _backendData$data.length) === 0) {}\n        } else {\n          throw new Error('Response is not in JSON format');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (_backendData$data2 = backendData.data) === null || _backendData$data2 === void 0 ? void 0 : _backendData$data2.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Stock : \", row.close]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Stockmarket, \"k9Do8uTa6JXC+z21Uy9gXvF+ZfQ=\", false, function () {\n  return [useParams];\n});\n_c = Stockmarket;\nexport default Stockmarket;\nvar _c;\n$RefreshReg$(_c, \"Stockmarket\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","filterParams","query","timeframe","get","queryParams","Stockmarket","_s","_backendData$data2","setTimeFrame","backendData","setBackendData","symbol","currentDate","Date","oneYearAgo","setFullYear","getFullYear","console","log","toISOString","slice","fetchData","queryparams","URLSearchParams","window","location","search","params","apiUrl","response","fetch","method","mode","ok","Error","contentType","headers","includes","_backendData$data","data","json","length","error","children","map","row","index","close","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cccc2184/Documents/Finance_node/client/src/Stockmarket/Stockmarket.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst filterParams = (query) => {\r\n    const timeframe = query.get('timeframe')  \r\n    \r\n    const queryParams = {\r\n        timeframe\r\n    };\r\n\r\n    return queryParams;\r\n}\r\n\r\nconst Stockmarket = () => {\r\n  const [timeframe, setTimeFrame] = useState({}); \r\n\tconst [backendData, setBackendData] = useState ({});\r\n  const { symbol } = useParams();\r\n\tconst currentDate = new Date();\r\n\tconst oneYearAgo = new Date(currentDate);\r\n\toneYearAgo.setFullYear(currentDate.getFullYear() - 1);\r\n  \r\n\r\n\tconsole.log('Today:', currentDate.toISOString().slice(0, 10));\r\n\tconsole.log('One year ago:', oneYearAgo.toISOString().slice(0, 10));\r\n \t\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const queryparams = new URLSearchParams(window.location.search);\r\n      const params = filterParams(queryparams);\r\n      const apiUrl = `http://127.0.0.1:5000/api/history?ticker=${symbol}&timeframe=${params.timeframe}`;\r\n      console.log(apiUrl);\r\n      try {\r\n          const response = await fetch(apiUrl, {\r\n\t\t\t      method : 'GET',\r\n\t\t\t      mode: 'cors',\r\n\t\t      });\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n\t\t      const contentType = response.headers.get('Content-Type');   \r\n\t          if (contentType && contentType.includes('application/json')) {\r\n\t\t        // Parse JSON if it's present\r\n\t\t\t        const data = await response.json();\r\n\t\t\t        setBackendData(data);\r\n              if (backendData.data?.length === 0) {\r\n                  \r\n              } \r\n\t\t        } else {\r\n\t\t\t        throw new Error('Response is not in JSON format');\r\n\t\t      }\r\n        } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\tfetchData();\r\n  }, [symbol]);\r\n\r\n\treturn(\r\n\t\t  <div>\r\n\t\t\t{backendData.data?.map((row, index) => (\r\n\t\t\t\t<div key={index}>\r\n\t\t\t\t  <h5>Stock : {row.close}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t </div>\r\n        )\r\n    }\r\nexport default Stockmarket;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}